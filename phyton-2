
class User:
    def __init__(self, height, weight):
        self.height = height  # Altura en cm
        self.weight = weight  # Peso en kg


def classify_weight(users):
    underweight = 0
    normal_weight = 0
    overweight = 0
    obese = 0

    for user in users:
        height_in_meters = user.height / 100.0
        bmi = user.weight / (height_in_meters * height_in_meters)

        if bmi < 18.5:
            underweight += 1
        elif 18.5 <= bmi < 24.9:
            normal_weight += 1
        elif 25 <= bmi < 29.9:
            overweight += 1
        else:
            obese += 1

    
    print_weight_distribution(underweight, normal_weight, overweight, obese, len(users))


def print_weight_distribution(a,b,c,d,e,):
    if e == 0:
        print("No hay usuarios para analizar.")
        return

    print(f"Porcentaje de usuarios con bajo peso: {(a / e) * 100:.2f}%")
    print(f"Porcentaje de usuarios con peso normal: {(b / e) * 100:.2f}%")
    print(f"Porcentaje de usuarios con sobrepeso: {(c / e) * 100:.2f}%")
    print(f"Porcentaje de usuarios con obesidad: {(d / e) * 100:.2f}%")

def main():
    num_users = int(input("Ingrese el nÃºmero de usuarios: "))

    
    users = []

    
    for i in range(num_users):
        height = float(input(f"Ingrese la altura (en cm) para el usuario {i + 1}: "))
        weight = float(input(f"Ingrese el peso (en kg) para el usuario {i + 1}: "))
        users.append(User(height, weight))

    
    classify_weight(users)
       
