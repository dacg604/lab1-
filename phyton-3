class Usuario:
    def __init__(self, altura, peso):
        self.altura = altura 
        self.peso = peso     


def clasificar_peso(usuarios):
    bajo_peso = 0
    peso_normal = 0
    sobrepeso = 0
    obeso = 0

    for i, usuario in enumerate(usuarios):
        altura_en_metros = usuario.altura / 100.0
        bmi = usuario.peso / (altura_en_metros * altura_en_metros)

        if bmi < 18.5:
            bajo_peso += 1
            peso_ideal = calcular_peso_ideal(usuario.altura)
            print(f"Usuario {i + 1}: Su peso ideal para estar en el rango de peso normal es: {peso_ideal:.2f} kg")
        elif 18.5 <= bmi < 24.9:
            peso_normal += 1
        elif 25 <= bmi < 29.9:
            sobrepeso += 1
            peso_ideal = calcular_peso_ideal(usuario.altura)
            print(f"Usuario {i + 1}: Su peso ideal para estar en el rango de peso normal es: {peso_ideal:.2f} kg")
        else:
            obeso += 1
            peso_ideal = calcular_peso_ideal(usuario.altura)
            print(f"Usuario {i + 1}: Su peso ideal para estar en el rango de peso normal es: {peso_ideal:.2f} kg")

    
    imprimir_distribucion_peso(bajo_peso, peso_normal, sobrepeso, obeso,len(usuarios) )

def calcular_peso_ideal(altura):
    altura_en_metros = altura / 100.
    peso_ideal = 22.0 * (altura ** 2)  
    return peso_ideal


def imprimir_distribucion_peso(a , b, c, d, total):
    if total == 0:
        print("No hay usuarios para analizar.")
        return

    print(f"Porcentaje de usuarios con bajo peso: {a / total * 100:.2f}%")
    print(f"Porcentaje de usuarios con peso normal: {b / total * 100:.2f}%")
    print(f"Porcentaje de usuarios con sobrepeso: {c / total * 100:.2f}%")
    print(f"Porcentaje de usuarios con obesidad: {d / total * 100:.2f}%")

def main():
    num_usuarios = int(input("Ingrese el nÃºmero de usuarios: "))

    
    usuarios = []
    for i in range(num_usuarios):
        altura = float(input(f"Ingrese la altura (en cm) para el usuario {i + 1}: "))
        peso = float(input(f"Ingrese el peso (en kg) para el usuario {i + 1}: "))
        usuarios.append(Usuario(altura, peso))
        total = len(usuarios)

    
    clasificar_peso(usuarios)


if __name__ == "__main__":
    main()
